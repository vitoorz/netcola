# go=gsmsgtypes.go
# package=netmsghandle/gs
# gamedealer=game/gateway/gm game/server/gs
# the line up is used for script, value after '=' should be set
# <template> : code:   1, action: LoginReq, payload: LoginReq, reaction: 2,
#              desc:   "player login request";
# 'payload' can be optional, equals 'action' if not supplied
# 'code' should be always included at the beginning of a net message announcement
# ':' is a keyword,
# any lines not begin with '#' but include ':' are considered part of the description
# any lines not contains ':' can be used for help message, like the following new {
# any kv should be end with ',' or ";"
# a protocol message is defined begin with "code: ", and end by the next "code: "

new {
    code: 2001, action: ServerLoginReq, reaction: ServerLoginAck;

    code: 2002, action: ServerLoginAck;
}

new {
    code: 2003, action: ServerLoginOutReq,
}

new {
    code: 2005, action: BrdCastAddMemberReq, payload: BrdCastGroupManageReq,
    reaction: BrdCastAddMemberAck;

    code: 2006, action: BrdCastAddMemberAck, payload: BrdCastGroupManageAck,
}

new {
    code: 2007, action: BrdCastDelMemberReq, payload: BrdCastGroupManageReq,
    reaction: BrdCastDelMemberAck;

    code: 2008, action: BrdCastDelMemberAck, payload: BrdCastGroupManageAck,
}

new {
    code: 2009, action: BrdCastDestroyReq, payload: BrdCastGroupManageReq,
    reaction: BrdCastDestroyAck;

    code: 2010, action: BrdCastDestroyAck, payload: BrdCastGroupManageAck,
}

new {
    code: 2011, action: BrdCastSyncReq, payload: BrdCastGroupManageReq,
    reaction: BrdCastSyncAck;

    code: 2012, action: BrdCastSyncAck, payload: BrdCastGroupManageAck,
}